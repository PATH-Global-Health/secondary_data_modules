[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Secondary Malaria Data Sources",
    "section": "",
    "text": "Preface\nVector control constitutes a major component of malaria control and elimination strategies. WHO recommends using insecticide-treated nets (ITNs) and/ or indoor residual spraying (IRS) for malaria vector control in most areas at risk of malaria as appropriate. These interventions may be supplemented by other interventions such as larval source management (LSM) depending on the setting and available resources.\nIn the first module, we will discuss the main vector control interventions, i.e., LLIN and IRS, in more detail. The second module deals with data from the Demographic and Health Survey (DHS) program.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "module_01.html",
    "href": "module_01.html",
    "title": "1  Insecticide treated nets",
    "section": "",
    "text": "2 ITN distribution data\nFor seceral decades, ITNs and LLINs have been delivered to malaria-endemic countries through various global or local initiatives and programs. National Malaria Control Programs (NMCPs) in endemic countries coordinate the distribution of bed nets to target populations.  In most countries, ITN distributions are mainly carried out in two formats:",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Insecticide treated nets</span>"
    ]
  },
  {
    "objectID": "module_01.html#working-with-llin-data-from-nmep",
    "href": "module_01.html#working-with-llin-data-from-nmep",
    "title": "1  Insecticide treated nets",
    "section": "2.1 Working with LLIN data from NMEP",
    "text": "2.1 Working with LLIN data from NMEP\n\n2.1.1 Mass LLIN distribution data\nIn this exercise, we will look at an example of mock data for sample districts in Ethiopia. Note that the data we use in this exercise is made up and may not have any use outside this exercise. This exercise assumes the LLIN data and accompanying population figures have been cleaned and verified for consistency and completeness.\nFirst, let us load the necessary libraries.   \n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(lubridate)\n\nWe will read data on mass campaign LLIN distribution obtained from NMEP to support our analysis. We will further read the corresponding population data for each district.\n\nmass_llin_dist&lt;- read_csv(\"data/llin_mass_2017_2020.csv\") \n\nRows: 300 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): region, zone, district\ndbl (4): llin_2017, llin_2018, llin_2019, llin_2020\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npopulation&lt;- read_csv(\"data/pop_2017_2020.csv\")\n\nRows: 300 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): region, zone, district\ndbl (4): pop_2017, pop_2018, pop_2019, pop_2020\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWe can visualize and verify if our data is consistent with the expectation. To do that we join the LLIN distribution datasets with the corresponding population data.\nThe following script does that by (a) converting the datasets into long format (b) joining them based on geographic units and years, and (c) generating LLINs per population (as an indicator of access to LLIN).\n\n### convert mass LLIN data into long format\nmass_llin_long&lt;- \n  mass_llin_dist |&gt;\n  pivot_longer(cols = contains(\"llin\"),\n               names_to = \"year_txt\", \n               values_to = \"llin\") |&gt;\n  mutate(year = as.numeric(substr(year_txt,6,9))) |&gt;\n  dplyr::select(-year_txt)\n\n### convert population data into long format\npopulation_long&lt;- population |&gt;\n  pivot_longer(cols = contains(\"pop\"),\n               names_to = \"year_txt\",\n               values_to = \"pop\")|&gt;\n  mutate(year = as.numeric(substr(year_txt,5,8))) |&gt;\n  dplyr::select(-year_txt)\n\n### join the two and generate llin per person\n  mllin_pop = mass_llin_long |&gt;\n  left_join(population_long,\n            by = c(\"region\",\n                   \"zone\",\n                   \"district\",\n                   \"year\")) |&gt;\n    mutate(llin_per_person  = llin/pop)\n\n\n### visualize\nmllin_pop|&gt; \n    filter(llin_per_person&gt;0) |&gt;\n    ggplot(aes(x=year, y = llin_per_person)) +\n    facet_wrap (~ paste0(region, \"-\", zone, \"-\", district)) +\n    geom_point()\n\n\n\n\n\n\n\n  ggsave(filename = \"plots/llin_mass.tiff\",\n         width = 8, height = 10, compression = \"lzw\")\n\nMass distributions often assume two persons would use a single LLIN. In other words, 100% coverage would be achieved if a district gets LLIN about half its population. Thus, it would be somewhat curious if a district reports LLIN per person greater than 0.5, and even more suspicious if they report figures greater than 1. Note that the data quality issues can come from one or both of the two data sets used, mass LLIN  and the population denominator.\n\n\n\n\n\nExercise 1: How many districts in the above example reported LLIN per person values greater than 1 in any year?\n\n\n2.1.2 Routine LLIN distribution data\nIn this exercise, we will look at an example of mock routine LLIN distribution data for the sample districts. This exercise assumes the LLIN data and accompanying population figures have been cleaned and verified for consistency and completeness.\nFirst, let us load the necessary libraries.   \n\nlibrary(tidyverse)\nlibrary(lubridate)\n\nWe will read data on LLIN distribution through routine programs (EPI and ANC). We will further read the corresponding population data for each district.\n\nroutine_llin_dist&lt;- read_csv(\"data/llin_routine_2017_2020.csv\") \n\nRows: 1200 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): region, zone, district\ndbl (9): year, llins_epi_u6m, llins_epi_611m, llins_epi_1223m, llins_epi_245...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\npopulation&lt;- read_csv(\"data/pop_2017_2020.csv\")\n\nRows: 300 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (3): region, zone, district\ndbl (4): pop_2017, pop_2018, pop_2019, pop_2020\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nWe can visualize and verify if our data is consistent with the expectation. To do that we join the LLIN distribution datasets with the corresponding population data.\nThe following script does that by (a) converting the datasets into long format (b) joining them based on geographic units and years, and (c) generating LLINs per estimated population under five years old by assuming U5 population is roughly a fifth of the overall population.\n\n### convert routine LLIN data into long format\nroutine_llin_long&lt;- routine_llin_dist |&gt;\n  pivot_longer(cols = contains(\"llin\"),\n               names_to = \"program\",\n               values_to = \"llin\")\n\n### convert population data into long format\npopulation_long&lt;- population |&gt;\n  pivot_longer(cols = contains(\"pop\"),\n               names_to = \"year_txt\", \n               values_to = \"pop\") |&gt;\n  mutate(year = as.numeric(substr(year_txt,5,8))) |&gt;\n  dplyr::select(-year_txt)\n\n\n### join the two and generate llin per person\n\nrllin_pop &lt;-   routine_llin_long |&gt;\n  left_join(population_long,\n            by = c(\"region\",\n                   \"zone\",\n                   \"district\",\n                   \"year\")) |&gt;\n  group_by(region, zone, district, year) |&gt;\n  summarise(rllin = sum(llin, na.rm=T),\n            population = mean(pop)) |&gt;\n  ungroup() |&gt;\n  mutate(llin_per_u5  = rllin/population * 5)  # assuming U5 a fifth of pop.\n\n`summarise()` has grouped output by 'region', 'zone', 'district'. You can\noverride using the `.groups` argument.\n\n## visualize\nrllin_pop|&gt; \n  ggplot(aes(x=year, \n             y = llin_per_u5)) +\n  facet_wrap (~ paste0(region, \"-\", \n                       zone, \"-\", district)) +\n  geom_point()\n\n\n\n\n\n\n\n ggsave(filename = \"plots/llin_routine.tiff\",\n       width = 8, height = 10, compression = \"lzw\") \n\nUnlike mass distributions, routine LLINs are distributed without consideration of the size of the population targeted. Rather, they are handed out during the visits by members of the population. However, we can have a broad assumption such as that the number of LLINs dispensed may not exceed the n time the population of under-five-year-old children. Data points flagged in this manner can also be subject to further scrutiny as part of the data cleaning process.\n\n\n\n\n\nExercise 2: How many districts in the above example reported routine LLIN per U5 population values greater than 5 in any year?\n\n\n2.1.3 Access to LLIN at the population level\nFollowing LLIN distributions LLIN access as a result of the distribution in the year can be easily estimated. In the next script, we will bring both mass campaign and routine LLIN distribution data together and generate estimates of access to LLIN. In calculating access to LLIN at the population level,  will assume one LLIN serves an average of 1.8 individuals in the population.\n\n### increment to the proportion with access to LLIN\nllin_access&lt;- mllin_pop |&gt;\n  left_join(rllin_pop,\n            by = c(\"region\", \"zone\", \"district\", \"year\")) |&gt;\n  mutate(total_llin = llin + rllin) |&gt;\n  mutate(llin_per_person = total_llin/population) |&gt;\n  mutate(inc_prop_access = llin_per_person*1.8) |&gt;\n  dplyr::select(region, zone, district, year, total_llin, llin_per_person,\n                inc_prop_access)\n\n## visualize\nllin_access|&gt; \n  ggplot(aes(x=year, y = inc_prop_access)) +\n  facet_wrap (~ paste0(region, \"-\", zone, \"-\", district)) +\n  geom_point()\n\n\n\n\n\n\n\nggsave(filename = \"plots/llin_access_increment.tiff\",\n       width = 8, height = 10, compression = \"lzw\")  \n\nSince access to LLIN is given in percentages, we can assume a maximum of 1, and districts with values beyond that may be flagged for further checking of their data.  \n\n\n\n\n\nExercise 3: How many districts in the above example reported increment to proportion with access to  LLIN of greater than 100% (&gt;1.0) ?",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Insecticide treated nets</span>"
    ]
  },
  {
    "objectID": "module_02.html",
    "href": "module_02.html",
    "title": "2  Demographic and Health Survey",
    "section": "",
    "text": "3 Registering with DHS\nAll data at the DHS are freely available. However, before you can download data, you must register as a DHS data user.  You can register at this [other-links].\nFigure 1: DHS users need to register at this website\nIn the Step-by-step introduction to analyzing data section, you can select Step 3:  Register for dataset access to get more information on how to register.\nFigure 2: Step 1 of the user registration process\nYou will need to provide your email and a password which you will use to access DHS data. Your email address also serves as your username. You will also need to provide information on the project you will use the data for. This includes the title, co-researchers, and a description of the study.  For our demonstration, we will provide the following information:\nFigure 3: Step 2 of the user registration process\nThe country/ countries you will download data for may or may not need to be identified, depending on the project. In this exercise, we will select the Democratic Republic of Congo (DRC) as the country and Sub-Saharan Africa as the region of interest. You can choose as many countries as you want, but make sure the list of countries you select corresponds to the overall objective of the project stated in the Description of Study section.\nOnce approved, which usually takes 24-48 hours, you will be granted access to the data",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Demographic and Health Survey</span>"
    ]
  },
  {
    "objectID": "module_02.html#survey-characteristics",
    "href": "module_02.html#survey-characteristics",
    "title": "2  Demographic and Health Survey",
    "section": "4.1 Survey characteristics",
    "text": "4.1 Survey characteristics\nTo explore what survey types reside in the DHS repository, we can use the dhs_survey_characteristics() function. Not all DHS surveys are related to malaria, and only a few are specific to malaria. You can find out by filtering those that have “malaria” in their names. This function provides high-level information on the types of data gathered by the DHS.\n\n# capture all data on survey characteristics \nsc&lt;- dhs_survey_characteristics()\n\nWriting your configuration to:\n   -&gt; C:\\Users\\jmillar\\AppData\\Local\\Temp\\RtmpkJHIqZ/rdhs/rdhs.json\n\n\nYou have not granted permision to rdhs to write outside of \nyour temporary directory. As a result any datasets or API  \ncalls will not be saved after you close this R sessiton. \nTo cache your results please use set_rdhs_config()\n\n# filter those that have 'malaria' in their names\nmal_sc&lt;-  dhs_survey_characteristics() |&gt;\n  dplyr::filter(grepl(\"Malaria\", SurveyCharacteristicName)) \n\nhead(mal_sc)\n\n  SurveyCharacteristicID        SurveyCharacteristicName\n1                     96                     Malaria DBS\n2                     90              Malaria microscopy\n3                    124              Malaria microscopy\n4                    119 Malaria microscopy - thin smear\n5                     57               Malaria questions\n6                     89                     Malaria RDT",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Demographic and Health Survey</span>"
    ]
  },
  {
    "objectID": "module_02.html#surveys",
    "href": "module_02.html#surveys",
    "title": "2  Demographic and Health Survey",
    "section": "4.2 Surveys",
    "text": "4.2 Surveys\nWe can go further and explore what country-specific surveys are included in the repository by using the function dhs_surveys(). The DHS program conducts malaria indicator surveys (MISs) in addition to the regular DHS. MIS is separate from DHS by its SurveyType attribute in the dhs_surveys data set.\n\n# capture all surveya\nsrv&lt;- dhs_surveys ()\n\n# summarize by survey type\ntable(srv$SurveyType)\n\n\nAIS DHS MIS \n 11 313  39 \n\n# capture MIS surveys by the year of release and country name \nsrv_mis&lt;- dhs_surveys(returnFields =\n                        c(\"ReleaseDate\", \"CountryName\",\"SurveyType\")) |&gt;\n  filter(SurveyType == \"MIS\")\n\nhead(srv_mis)\n\n  ReleaseDate SurveyType  CountryName\n1  2008-02-27        MIS       Angola\n2  2012-01-24        MIS       Angola\n3  2015-10-16        MIS Burkina Faso\n4  2019-07-08        MIS Burkina Faso\n5  2013-09-03        MIS      Burundi\n6  2023-10-27        MIS     Cameroon\n\n# display all DHS and MIS surveys released in the year 2018\ndhs_surveys(returnFields =\n                        c(\"ReleaseDate\", \"CountryName\",\"SurveyType\")) |&gt;\n  filter(SurveyType %in% c(\"MIS\", \"DHS\")) |&gt;\n  filter(year(ReleaseDate)==2018)\n\n   ReleaseDate SurveyType CountryName\n1   2018-04-05        DHS     Burundi\n2   2018-08-21        DHS       Haiti\n3   2018-01-11        DHS       India\n4   2018-04-25        MIS      Malawi\n5   2018-10-03        DHS Philippines\n6   2018-09-07        MIS      Rwanda\n7   2018-09-28        DHS     Senegal\n8   2018-12-14        DHS  Tajikistan\n9   2018-10-22        MIS    Tanzania\n10  2018-04-10        DHS Timor-Leste\n11  2018-08-08        MIS        Togo\n12  2018-07-30        DHS      Turkey\n13  2018-07-30        DHS      Turkey\n14  2018-03-12        DHS      Uganda",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Demographic and Health Survey</span>"
    ]
  },
  {
    "objectID": "module_02.html#countries",
    "href": "module_02.html#countries",
    "title": "2  Demographic and Health Survey",
    "section": "4.3 Countries",
    "text": "4.3 Countries\nWe can explore which countries have data in the DHS repository by using the dhs_countries() function. Notice what country code each country is assigned. We will use these two-letter country codes to download data in our examples.\n\n# capture all countries\ncountries&lt;- dhs_countries()\n\n# capture country codes and names\ncountry_ids&lt;- dhs_countries(returnFields=c(\"DHS_countryCode\", \"CountryName\"))\n\nhead(country_ids)\n\n  DHS_CountryCode CountryName\n1              AF Afghanistan\n2              AL     Albania\n3              AO      Angola\n4              AM     Armenia\n5              AZ  Azerbaijan\n6              BD  Bangladesh\n\n\nNotice that the country codes for CAR, DRC, Ethiopia, Gambi, Nigeria, Senegal, and Zambia are “CF”, “CD”, “ET”, “GM”, “NG”, “SN”, and “ZM”, respectively.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Demographic and Health Survey</span>"
    ]
  },
  {
    "objectID": "module_02.html#indicators",
    "href": "module_02.html#indicators",
    "title": "2  Demographic and Health Survey",
    "section": "4.4 Indicators",
    "text": "4.4 Indicators\nDHS (and MIS) include thousands of indicators whose data you can download These indicators are described in the data dictionary which can be explored using the dhs_indicators() function.\n\n#capture the list of indicators\nind&lt;- dhs_indicators()\nnames(ind)\n\n [1] \"Definition\"              \"NumberScale\"            \n [3] \"IndicatorType\"           \"MeasurementType\"        \n [5] \"IsQuickStat\"             \"ShortName\"              \n [7] \"IndicatorId\"             \"Level1\"                 \n [9] \"IndicatorTotalId\"        \"Level2\"                 \n[11] \"Level3\"                  \"SDRID\"                  \n[13] \"IndicatorOldId\"          \"TagIds\"                 \n[15] \"DenominatorWeightedId\"   \"Label\"                  \n[17] \"IndicatorOrder\"          \"Denominator\"            \n[19] \"QuickStatOrder\"          \"IndicatorSpecial1Id\"    \n[21] \"DenominatorUnweightedId\" \"IndicatorSpecial2Id\"    \n\n#capture the list of indicators by their label and ID\nindicators &lt;- dhs_indicators(returnFields=c(\"IndicatorId\", \"Label\"))\n\nhead(indicators)\n\n    IndicatorId                              Label\n1 FE_FRTR_W_A10 Age specific fertility rate: 10-14\n2 FE_FRTR_W_A15 Age specific fertility rate: 15-19\n3 FE_FRTR_W_A20 Age specific fertility rate: 20-24\n4 FE_FRTR_W_A25 Age specific fertility rate: 25-29\n5 FE_FRTR_W_A30 Age specific fertility rate: 30-34\n6 FE_FRTR_W_A35 Age specific fertility rate: 35-39",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Demographic and Health Survey</span>"
    ]
  },
  {
    "objectID": "module_02.html#datasets",
    "href": "module_02.html#datasets",
    "title": "2  Demographic and Health Survey",
    "section": "4.5 Datasets",
    "text": "4.5 Datasets\nDownloading DHS data involves data retrieval from hundreds of files. The repository is organized into thousands of datasets, each identified by its file name. The datasets are stored in different formats, including SPCC, flat ASCII data, Stata data, etc. The fileType indicates the the datasets organization including births recode, household members recode, household recode, provider, verbal autopsy, etc. rdhs uses acronyms to represent these file types. For instance ‘PR’ is used to represent person (household member) recode.\n\n# capture all datasets\ndset&lt;- dhs_datasets()\n\n# capture all datasets by country name, year, file format, and file type. \ndatasets&lt;- dhs_datasets(returnFields=c(\"SurveyType,\", \"CountryName\", \"SurveyYear\", \"FileFormat\", \"FileType\"))\n\n# capture all datasets related to household member recode\nperson_datasets&lt;- dhs_datasets(fileType =\"PR\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Demographic and Health Survey</span>"
    ]
  },
  {
    "objectID": "module_02.html#downloading-a-specific-dataset",
    "href": "module_02.html#downloading-a-specific-dataset",
    "title": "2  Demographic and Health Survey",
    "section": "5.1 Downloading a specific dataset",
    "text": "5.1 Downloading a specific dataset\nLet us assume we want to download RDT prevalence from all surveys conducted since 2005 in DRC. This can be done by selecting the surveys conducted since 2025 in DRC, and specifying the file format and file type.\n\nMalaria RDT is organized into the survey characteristics named Malaria RDT (surveyCharacteristicsId = 89)\nData on RDT prevalence is located in the dataset organized into household members thus will be in household members recode data type (PR).\nThe file type will be flat ASCII (FL)\n\n\n# filter the surveys for the DRC (country code CD) and malaria RDT (id=89)\n# since 2005\nthis_survey &lt;- dhs_surveys(\n  countryIds = c(\"CD\"), \n  surveyCharacteristicIds = 89, \n  surveyYearStart = 2005)\n\n# zoom into the datasets with data on household member recode\nthis_dataset &lt;- dhs_datasets(\n  surveyIds = this_survey,\n  fileFormat = \"FL\",\n  fileType = \"PR\")\n\n# dowload the data from DHS repository\n# at this stage the system will verify our login information\n\n# commented out because of a bug at the DHS website\n # downloads &lt;- get_datasets(this_dataset$FileName)",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Demographic and Health Survey</span>"
    ]
  },
  {
    "objectID": "module_02.html#downloading-all-data-for-a-country",
    "href": "module_02.html#downloading-all-data-for-a-country",
    "title": "2  Demographic and Health Survey",
    "section": "5.2 Downloading all data for a country",
    "text": "5.2 Downloading all data for a country\nAnother approach to downloading DHS data is using the rdhs repository in R. This repository has archived historical DHS surveys for all countries , which can access in R. The following script access all DHS data for DRC conducted since 2005 broken down by provinces.\n\n# capture all indicators in DHS\nindicators &lt;- dhs_indicators(returnFields=c(\"IndicatorId\", \"Label\"))\n\n# capture data on all indicators for the DRC since 2005 \n# broken down by subnationally (province level)\ncd_all_dhs&lt;- dhs_data(countryIds = \"CD\",\n                      indicatorIds = indicators$IndicatorID, \n                      surveyYearStart = 2005 ,\n                      breakdown = \"subnational\")",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Demographic and Health Survey</span>"
    ]
  }
]